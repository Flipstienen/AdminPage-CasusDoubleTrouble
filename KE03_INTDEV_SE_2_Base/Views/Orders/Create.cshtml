@model OrderCreateViewModel

<h1>Create</h1>

<h4>Order</h4>
<hr />
<div class="row">
    <div class="col-md-6">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="form-group">
                <label asp-for="CustomerId" class="control-label"></label>
                <select asp-for="CustomerId" class="form-control" asp-items="ViewBag.CustomerId"></select>
            </div>

            <hr />
            <h5>Products</h5>
            <div id="orderPartsContainer">
                @for (int i = 0; i < Model.OrderParts.Count; i++)
                {
                    <div class="order-part border p-2 mb-2 rounded position-relative">
                        <button type="button" class="btn-close remove-btn position-absolute" style="top: 0.5rem; right: 0.5rem;" aria-label="Remove"></button>
                        <div class="form-group">
                            <label>Product</label>
                            <select name="OrderParts[@i].ProductId" class="form-control" asp-items="ViewBag.partId"></select>
                        </div>
                        <div class="form-group">
                            <label>Quantity</label>
                            <input type="number" name="OrderParts[@i].Quantity" class="form-control" />
                        </div>
                    </div>
                }
            </div>
            <button type="button" id="addProductBtn" class="btn btn-sm btn-outline-primary">Add Product</button>

            <div class="form-group mt-3">
                <label asp-for="DeliveryOption" class="control-label"></label>
                <select asp-for="DeliveryOption" class="form-control" asp-items="ViewBag.DeliveryOption"></select>
            </div>
            <br/>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    <script>
        let index = @Model.OrderParts.Count;

        document.getElementById('addProductBtn').addEventListener('click', function () {
            const container = document.getElementById('orderPartsContainer');
            const template = `
                <div class="order-part border p-2 mb-2 rounded position-relative">
                    <button type="button" class="btn-close remove-btn position-absolute" style="top: 0.5rem; right: 0.5rem;" aria-label="Remove"></button>
                    <div class="form-group">
                        <label>Product</label>
                        <select name="OrderParts[${index}].ProductId" class="form-control">
                            ${document.querySelector('select[name^="OrderParts[0].ProductId"]').innerHTML}
                        </select>
                    </div>
                    <div class="form-group">
                        <label>Quantity</label>
                        <input type="number" name="OrderParts[${index}].Quantity" class="form-control" />
                    </div>
                </div>`;
            container.insertAdjacentHTML('beforeend', template);
            index++;
        });

        document.getElementById('orderPartsContainer').addEventListener('click', function (e) {
            if (e.target.classList.contains('remove-btn')) {
                const allParts = document.querySelectorAll('.order-part');
                if (allParts.length > 1) {
                    e.target.closest('.order-part').remove();
                } else {
                    alert('At least one product is required in the order.');
                }
            }
        });
    </script>
}